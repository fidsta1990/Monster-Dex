{"version":3,"sources":["components/card/Card.jsx","components/card-list/CardList.jsx","components/search-box/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","onChangeHandler","type","onChange","App","useState","setMonsters","searchedField","setSearchedField","filteredMonsters","filter","toLowerCase","includes","useEffect","loadData","a","fetch","res","json","user","console","log","value","e","target","searchfield","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAgBeA,MAbf,YAA4B,IAAZC,EAAW,EAAXA,QACd,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAQG,GAAlC,0BACHC,IAAI,YAEN,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCGHC,MAVf,YAAiC,IAAbC,EAAY,EAAZA,SAClB,OACE,qBAAKP,UAAU,YAAf,SACGO,EAASC,KAAI,SAACT,GACb,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,U,MCQnBO,MAbf,YAAsD,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,gBAChC,OACE,8BACE,uBACEC,KAAK,SACLC,SAAUF,EACVD,YAAaA,EACbV,UAAU,cCyCHc,MA7Cf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNR,EADM,KACIS,EADJ,OAE6BD,mBAAS,IAFtC,mBAENE,EAFM,KAESC,EAFT,KAWPC,EAAmBZ,EAASa,QAAO,SAACrB,GAAD,OACvCA,EAAQK,KAAKiB,cAAcC,SAASL,EAAcI,kBAGpDE,qBAAU,WACRC,IACAN,EAAiBD,KAChB,CAACA,IAEJ,IAAMO,EAAQ,uCAAG,8BAAAC,EAAA,+EAEKC,MAjBN,8CAeC,cAEPC,EAFO,gBAGMA,EAAIC,OAHV,OAGPC,EAHO,OAKbb,EAAYa,GALC,kDAObC,QAAQC,IAAR,MAPa,0DAAH,qDAWd,OACE,sBAAK/B,UAAU,MAAf,UACE,6CACA,cAAC,EAAD,CACEgC,MAAOf,EACPP,YAjCc,oBAkCdC,gBA9BkB,SAACsB,GACvBf,EAAiBe,EAAEC,OAAOF,QA8BtBG,YAAalB,IAEf,cAAC,EAAD,CAAUV,SAAUY,QClCXiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.17f25515.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../card/card.styles.css\";\n\nfunction Card({ monster }) {\n  return (\n    <div className='card-container'>\n      <img\n        src={`https://robohash.org/${monster.id}?set=set2&size=150x150`}\n        alt='monster'\n      />\n      <h1>{monster.name}</h1>\n      <p>{monster.email}</p>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport \"../card-list/card-list.styles.css\";\nimport Card from \"../card/Card\";\n\nfunction CardList({ monsters }) {\n  return (\n    <div className='card-list'>\n      {monsters.map((monster) => {\n        return <Card key={monster.id} monster={monster} />\n      })}\n    </div>\n  );\n}\n\nexport default CardList;\n","import React from \"react\";\nimport \"../search-box/searchbox.css\";\n\nfunction SearchBox({ placeholder, onChangeHandler }) {\n  return (\n    <div>\n      <input\n        type='search'\n        onChange={onChangeHandler}\n        placeholder={placeholder}\n        className='search'\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport CardList from \"./components/card-list/CardList\";\nimport SearchBox from \"./components/search-box/SearchBox\";\n\nfunction App() {\n  const [monsters, setMonsters] = useState([]);\n  const [searchedField, setSearchedField] = useState(\"\");\n  const placeholder = \"search monster...\";\n\n  const API_URL = \"https://jsonplaceholder.typicode.com/users\";\n\n  const onChangeHandler = (e) => {\n    setSearchedField(e.target.value);\n  };\n\n  const filteredMonsters = monsters.filter((monster) =>\n    monster.name.toLowerCase().includes(searchedField.toLowerCase())\n  );\n\n  useEffect(() => {\n    loadData();\n    setSearchedField(searchedField);\n  }, [searchedField]);\n\n  const loadData = async () => {\n    try {\n      const res = await fetch(API_URL);\n      const user = await res.json();\n\n      setMonsters(user);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className='App'>\n      <h1>Monster Dex</h1>\n      <SearchBox\n        value={searchedField}\n        placeholder={placeholder}\n        onChangeHandler={onChangeHandler}\n        searchfield={searchedField}\n      />\n      <CardList monsters={filteredMonsters} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}